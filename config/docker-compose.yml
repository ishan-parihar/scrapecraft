services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:pass@db:5432/scrapecraft
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - REDIS_URL=redis://redis:6379/0
      # Using local ScrapeGraphAI instead of API
      - USE_LOCAL_SCRAPING=${USE_LOCAL_SCRAPING:-true}
      # LLM Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOCAL_LLM_MODEL=${LOCAL_LLM_MODEL:-gpt-3.5-turbo}
      - USE_OLLAMA=${USE_OLLAMA:-false}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.2}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://localhost:11434}
      - SCRAPEGRAPHAI_HEADLESS=${SCRAPEGRAPHAI_HEADLESS:-true}
      - SCRAPEGRAPHAI_VERBOSE=${SCRAPEGRAPHAI_VERBOSE:-false}
    depends_on:
      - db
      - redis
    volumes:
      # Only mount source code for development, not for production
      - ./backend:/app  # Comment this out for production
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    restart: unless-stopped

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=scrapecraft
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Optional: Ollama service for local LLM
  ollama:
    image: ollama/ollama:latest
    profiles:
      - ollama  # Only start with --profile ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --cleanup
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    restart: unless-stopped

volumes:
  pgdata:
  ollama_data: